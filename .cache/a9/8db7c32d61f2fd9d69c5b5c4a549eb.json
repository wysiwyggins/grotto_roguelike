{"id":"node_modules/@pixi/text-bitmap/lib/formats/index.mjs","dependencies":[{"name":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/index.mjs.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/wileywiggins/Development/grotto_roguelike/package.json","includedInParent":true,"mtime":1686171865537},{"name":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/package.json","includedInParent":true,"mtime":499162500000},{"name":"./TextFormat.mjs","loc":{"line":2,"column":27,"index":74},"parent":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/index.mjs","resolved":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/TextFormat.mjs"},{"name":"./XMLFormat.mjs","loc":{"line":4,"column":26,"index":165},"parent":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/index.mjs","resolved":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/XMLFormat.mjs"},{"name":"./XMLStringFormat.mjs","loc":{"line":6,"column":32,"index":273},"parent":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/index.mjs","resolved":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/text-bitmap/lib/formats/XMLStringFormat.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TextFormat\", {\n  enumerable: true,\n  get: function () {\n    return _TextFormat.TextFormat;\n  }\n});\nObject.defineProperty(exports, \"XMLFormat\", {\n  enumerable: true,\n  get: function () {\n    return _XMLFormat.XMLFormat;\n  }\n});\nObject.defineProperty(exports, \"XMLStringFormat\", {\n  enumerable: true,\n  get: function () {\n    return _XMLStringFormat.XMLStringFormat;\n  }\n});\nexports.autoDetectFormat = autoDetectFormat;\nvar _TextFormat = require(\"./TextFormat.mjs\");\nvar _XMLFormat = require(\"./XMLFormat.mjs\");\nvar _XMLStringFormat = require(\"./XMLStringFormat.mjs\");\nconst formats = [_TextFormat.TextFormat, _XMLFormat.XMLFormat, _XMLStringFormat.XMLStringFormat];\nfunction autoDetectFormat(data) {\n  for (let i = 0; i < formats.length; i++) {\n    if (formats[i].test(data)) {\n      return formats[i];\n    }\n  }\n  return null;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/formats/index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":28,"column":0}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":28,"column":6}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":28,"column":13}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":28,"column":16}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":28,"column":17}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":28,"column":39}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":28,"column":41}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":28,"column":61}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":28,"column":63}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":28,"column":95}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":28,"column":96}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":29,"column":0}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":29,"column":9}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":29,"column":25}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":18,"column":33},"generated":{"line":29,"column":26}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":30}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":32}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":30,"column":2}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":30,"column":7}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":30,"column":11}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":30,"column":12}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":30,"column":15}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":30,"column":16}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":30,"column":18}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":30,"column":19}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":30,"column":22}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":30,"column":29}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":30,"column":30}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":30,"column":36}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":20,"column":40},"generated":{"line":30,"column":38}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":30,"column":39}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":30,"column":41}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":30,"column":43}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":31,"column":4}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":31,"column":8}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":31,"column":15}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":31,"column":16}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":31,"column":17}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":31,"column":18}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":31,"column":19}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":28},"generated":{"line":31,"column":23}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":28},"generated":{"line":31,"column":24}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":22,"column":32},"generated":{"line":31,"column":28}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":31,"column":29}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":31,"column":31}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":32,"column":6}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":32,"column":13}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":32,"column":20}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":32,"column":21}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":32,"column":22}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":32,"column":23}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":33,"column":4}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":34,"column":2}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":35,"column":2}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":35,"column":9}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":35,"column":13}},{"source":"../../src/formats/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../../src/formats/index.ts":"import { TextFormat } from './TextFormat';\nimport { XMLFormat } from './XMLFormat';\nimport { XMLStringFormat } from './XMLStringFormat';\n\n// Registered formats, maybe make this extensible in the future?\nconst formats = [\n    TextFormat,\n    XMLFormat,\n    XMLStringFormat,\n] as const;\n\n/**\n * Auto-detect BitmapFont parsing format based on data.\n * @private\n * @param {any} data - Data to detect format\n * @returns {any} Format or null\n */\nexport function autoDetectFormat(data: unknown): typeof formats[number] | null\n{\n    for (let i = 0; i < formats.length; i++)\n    {\n        if (formats[i].test(data))\n        {\n            return formats[i];\n        }\n    }\n\n    return null;\n}\n\nexport type { IBitmapFontRawData } from './TextFormat';\nexport { TextFormat, XMLFormat, XMLStringFormat };\n"},"lineCount":null}},"error":null,"hash":"9b816e11175a5113276428b6cbd1d867","cacheData":{"env":{}}}