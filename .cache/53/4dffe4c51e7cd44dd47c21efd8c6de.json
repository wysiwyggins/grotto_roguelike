{"id":"node_modules/@pixi/utils/lib/url.mjs","dependencies":[{"name":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/utils/lib/url.mjs.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/wileywiggins/Development/grotto_roguelike/package.json","includedInParent":true,"mtime":1686171865537},{"name":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/utils/package.json","includedInParent":true,"mtime":499162500000},{"name":"url","loc":{"line":1,"column":39,"index":39},"parent":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/@pixi/utils/lib/url.mjs","resolved":"/Users/wileywiggins/Development/grotto_roguelike/node_modules/url/url.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.url = void 0;\nvar _url = require(\"url\");\nconst url = {\n  parse: _url.parse,\n  format: _url.format,\n  resolve: _url.resolve\n};\nexports.url = url;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/url.ts","name":null,"original":{"line":82,"column":7},"generated":{"line":8,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":82,"column":13},"generated":{"line":8,"column":6}},{"source":"../src/url.ts","name":null,"original":{"line":82,"column":19},"generated":{"line":8,"column":9}},{"source":"../src/url.ts","name":null,"original":{"line":82,"column":19},"generated":{"line":8,"column":12}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":9,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":11},"generated":{"line":9,"column":7}},{"source":"../src/url.ts","name":"_parse","original":{"line":83,"column":11},"generated":{"line":9,"column":9}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":11},"generated":{"line":9,"column":19}},{"source":"../src/url.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":10,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":10,"column":8}},{"source":"../src/url.ts","name":"_format","original":{"line":84,"column":12},"generated":{"line":10,"column":10}},{"source":"../src/url.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":10,"column":21}},{"source":"../src/url.ts","name":null,"original":{"line":85,"column":4},"generated":{"line":11,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":85,"column":13},"generated":{"line":11,"column":9}},{"source":"../src/url.ts","name":"_resolve","original":{"line":85,"column":13},"generated":{"line":11,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":12,"column":1}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":7}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":8}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":14}},{"source":"../src/url.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":13,"column":17}}],"sources":{"../src/url.ts":"/*\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\n\nimport { format as _format, parse as _parse, resolve as _resolve } from 'url';\n\ninterface ParsedUrlQuery\n{\n    [key: string]: string | string[];\n}\n\ninterface ParsedUrlQueryInput\n{\n    [key: string]: unknown;\n}\n\ninterface UrlObjectCommon\n{\n    auth?: string;\n    hash?: string;\n    host?: string;\n    hostname?: string;\n    href?: string;\n    path?: string;\n    pathname?: string;\n    protocol?: string;\n    search?: string;\n    slashes?: boolean;\n}\n\n// Input to `url.format`\ninterface UrlObject extends UrlObjectCommon\n{\n    port?: string | number;\n    query?: string | null | ParsedUrlQueryInput;\n}\n\n// Output of `url.parse`\ninterface Url extends UrlObjectCommon\n{\n    port?: string;\n    query?: string | null | ParsedUrlQuery;\n}\n\ninterface UrlWithParsedQuery extends Url\n{\n    query: ParsedUrlQuery;\n}\n\ninterface UrlWithStringQuery extends Url\n{\n    query: string | null;\n}\n\ninterface URLFormatOptions\n{\n    auth?: boolean;\n    fragment?: boolean;\n    search?: boolean;\n    unicode?: boolean;\n}\n\ntype ParseFunction = {\n    (urlStr: string): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: false | undefined, slashesDenoteHost?: boolean): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: true, slashesDenoteHost?: boolean): UrlWithParsedQuery;\n    (urlStr: string, parseQueryString: boolean, slashesDenoteHost?: boolean): Url;\n};\n\ntype FormatFunction = {\n    (URL: URL, options?: URLFormatOptions): string;\n    (urlObject: UrlObject | string): string;\n};\n\ntype ResolveFunction = {\n    (from: string, to: string): string;\n};\n\nexport const url = {\n    parse: _parse as ParseFunction,\n    format: _format as FormatFunction,\n    resolve: _resolve as ResolveFunction,\n};\n"},"lineCount":null}},"error":null,"hash":"9904f886253370892870c607682d5462","cacheData":{"env":{}}}